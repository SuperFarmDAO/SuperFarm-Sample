/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TRADETOKEN, TRADETOKENInterface } from "../TRADETOKEN";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ba738038062001ba783398101604081905262000034916200017a565b80620000408162000053565b506200004c336200006c565b5062000293565b805162000068906002906020840190620000be565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000cc9062000256565b90600052602060002090601f016020900481019282620000f057600085556200013b565b82601f106200010b57805160ff19168380011785556200013b565b828001600101855582156200013b579182015b828111156200013b5782518255916020019190600101906200011e565b50620001499291506200014d565b5090565b5b808211156200014957600081556001016200014e565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200018e57600080fd5b82516001600160401b0380821115620001a657600080fd5b818501915085601f830112620001bb57600080fd5b815181811115620001d057620001d062000164565b604051601f8201601f19908116603f01168101908382118183101715620001fb57620001fb62000164565b8160405282815288868487010111156200021457600080fd5b600093505b8284101562000238578484018601518185018701529285019262000219565b828411156200024a5760008684830101525b98975050505050505050565b600181811c908216806200026b57607f821691505b602082108114156200028d57634e487b7160e01b600052602260045260246000fd5b50919050565b61190480620002a36000396000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e01c8063731133e911610081578063e985e9c51161005b578063e985e9c5146101bf578063f242432a146101fb578063f2fde38b1461020e57600080fd5b8063731133e91461017e5780638da5cb5b14610191578063a22cb465146101ac57600080fd5b80632eb2c2d6116100b25780632eb2c2d6146101415780634e1273f414610156578063715018a61461017657600080fd5b8062fdd58e146100d857806301ffc9a7146100fe5780630e89341c14610121575b600080fd5b6100eb6100e636600461118f565b610221565b6040519081526020015b60405180910390f35b61011161010c3660046111cf565b6102ca565b60405190151581526020016100f5565b61013461012f3660046111f3565b61031c565b6040516100f59190611259565b61015461014f3660046113b8565b6103b0565b005b610169610164366004611462565b610452565b6040516100f59190611568565b610154610590565b61015461018c36600461157b565b6105f6565b6003546040516001600160a01b0390911681526020016100f5565b6101546101ba3660046115dc565b610662565b6101116101cd366004611618565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61015461020936600461164b565b610671565b61015461021c3660046116b0565b61070c565b60006001600160a01b0383166102a45760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102fb57506001600160e01b031982166303a24d0760e21b145b8061031657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461032b906116cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610357906116cb565b80156103a45780601f10610379576101008083540402835291602001916103a4565b820191906000526020600020905b81548152906001019060200180831161038757829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103cc57506103cc85336101cd565b61043e5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161029b565b61044b85858585856107ee565b5050505050565b606081518351146104cb5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161029b565b6000835167ffffffffffffffff8111156104e7576104e761126c565b604051908082528060200260200182016040528015610510578160200160208202803683370190505b50905060005b84518110156105885761055b85828151811061053457610534611706565b602002602001015185838151811061054e5761054e611706565b6020026020010151610221565b82828151811061056d5761056d611706565b602090810291909101015261058181611732565b9050610516565b509392505050565b6003546001600160a01b031633146105ea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029b565b6105f46000610a61565b565b6003546001600160a01b031633146106505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029b565b61065c84848484610acb565b50505050565b61066d338383610bd5565b5050565b6001600160a01b03851633148061068d575061068d85336101cd565b6106ff5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161029b565b61044b8585858585610cca565b6003546001600160a01b031633146107665760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029b565b6001600160a01b0381166107e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161029b565b6107eb81610a61565b50565b81518351146108655760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161029b565b6001600160a01b0384166108c95760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161029b565b3360005b84518110156109f35760008582815181106108ea576108ea611706565b60200260200101519050600085838151811061090857610908611706565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561099b5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161029b565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109d890849061174d565b92505081905550505050806109ec90611732565b90506108cd565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a43929190611765565b60405180910390a4610a59818787878787610e68565b505050505050565b600380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610b2b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161029b565b33610b4581600087610b3c8861101d565b61044b8861101d565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610b7590849061174d565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461044b81600087878787611068565b816001600160a01b0316836001600160a01b03161415610c5d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161029b565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610d2e5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161029b565b33610d3e818787610b3c8861101d565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610dc25760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161029b565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610dff90849061174d565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e5f828888888888611068565b50505050505050565b6001600160a01b0384163b15610a595760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610eac9089908990889088908890600401611793565b602060405180830381600087803b158015610ec657600080fd5b505af1925050508015610ef6575060408051601f3d908101601f19168201909252610ef3918101906117f1565b60015b610fac57610f0261180e565b806308c379a01415610f3c5750610f1761182a565b80610f225750610f3e565b8060405162461bcd60e51b815260040161029b9190611259565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161029b565b6001600160e01b0319811663bc197c8160e01b14610e5f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161029b565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061105757611057611706565b602090810291909101015292915050565b6001600160a01b0384163b15610a595760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906110ac90899089908890889088906004016118b4565b602060405180830381600087803b1580156110c657600080fd5b505af19250505080156110f6575060408051601f3d908101601f191682019092526110f3918101906117f1565b60015b61110257610f0261180e565b6001600160e01b0319811663f23a6e6160e01b14610e5f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161029b565b80356001600160a01b038116811461118a57600080fd5b919050565b600080604083850312156111a257600080fd5b6111ab83611173565b946020939093013593505050565b6001600160e01b0319811681146107eb57600080fd5b6000602082840312156111e157600080fd5b81356111ec816111b9565b9392505050565b60006020828403121561120557600080fd5b5035919050565b6000815180845260005b8181101561123257602081850181015186830182015201611216565b81811115611244576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006111ec602083018461120c565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156112a8576112a861126c565b6040525050565b600067ffffffffffffffff8211156112c9576112c961126c565b5060051b60200190565b600082601f8301126112e457600080fd5b813560206112f1826112af565b6040516112fe8282611282565b83815260059390931b850182019282810191508684111561131e57600080fd5b8286015b848110156113395780358352918301918301611322565b509695505050505050565b600082601f83011261135557600080fd5b813567ffffffffffffffff81111561136f5761136f61126c565b604051611386601f8301601f191660200182611282565b81815284602083860101111561139b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156113d057600080fd5b6113d986611173565b94506113e760208701611173565b9350604086013567ffffffffffffffff8082111561140457600080fd5b61141089838a016112d3565b9450606088013591508082111561142657600080fd5b61143289838a016112d3565b9350608088013591508082111561144857600080fd5b5061145588828901611344565b9150509295509295909350565b6000806040838503121561147557600080fd5b823567ffffffffffffffff8082111561148d57600080fd5b818501915085601f8301126114a157600080fd5b813560206114ae826112af565b6040516114bb8282611282565b83815260059390931b85018201928281019150898411156114db57600080fd5b948201945b83861015611500576114f186611173565b825294820194908201906114e0565b9650508601359250508082111561151657600080fd5b50611523858286016112d3565b9150509250929050565b600081518084526020808501945080840160005b8381101561155d57815187529582019590820190600101611541565b509495945050505050565b6020815260006111ec602083018461152d565b6000806000806080858703121561159157600080fd5b61159a85611173565b93506020850135925060408501359150606085013567ffffffffffffffff8111156115c457600080fd5b6115d087828801611344565b91505092959194509250565b600080604083850312156115ef57600080fd5b6115f883611173565b91506020830135801515811461160d57600080fd5b809150509250929050565b6000806040838503121561162b57600080fd5b61163483611173565b915061164260208401611173565b90509250929050565b600080600080600060a0868803121561166357600080fd5b61166c86611173565b945061167a60208701611173565b93506040860135925060608601359150608086013567ffffffffffffffff8111156116a457600080fd5b61145588828901611344565b6000602082840312156116c257600080fd5b6111ec82611173565b600181811c908216806116df57607f821691505b6020821081141561170057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156117465761174661171c565b5060010190565b600082198211156117605761176061171c565b500190565b604081526000611778604083018561152d565b828103602084015261178a818561152d565b95945050505050565b60006001600160a01b03808816835280871660208401525060a060408301526117bf60a083018661152d565b82810360608401526117d1818661152d565b905082810360808401526117e5818561120c565b98975050505050505050565b60006020828403121561180357600080fd5b81516111ec816111b9565b600060033d11156118275760046000803e5060005160e01c5b90565b600060443d10156118385790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561186857505050505090565b82850191508151818111156118805750505050505090565b843d870101602082850101111561189a5750505050505090565b6118a960208286010187611282565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526118ec60a083018461120c565b97965050505050505056fea164736f6c6343000809000a";

type TRADETOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TRADETOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TRADETOKEN__factory extends ContractFactory {
  constructor(...args: TRADETOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TRADETOKEN> {
    return super.deploy(_uri, overrides || {}) as Promise<TRADETOKEN>;
  }
  getDeployTransaction(
    _uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_uri, overrides || {});
  }
  attach(address: string): TRADETOKEN {
    return super.attach(address) as TRADETOKEN;
  }
  connect(signer: Signer): TRADETOKEN__factory {
    return super.connect(signer) as TRADETOKEN__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TRADETOKENInterface {
    return new utils.Interface(_abi) as TRADETOKENInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TRADETOKEN {
    return new Contract(address, _abi, signerOrProvider) as TRADETOKEN;
  }
}
