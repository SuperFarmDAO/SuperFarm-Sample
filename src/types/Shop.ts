/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type PricePairStruct = {
  assetType: BigNumberish;
  asset: string;
  price: BigNumberish;
};

export type PricePairStructOutput = [number, string, BigNumber] & {
  assetType: number;
  asset: string;
  price: BigNumber;
};

export type ShopItemStruct = {
  token: string;
  id: BigNumberish;
  amount: BigNumberish;
};

export type ShopItemStructOutput = [string, BigNumber, BigNumber] & {
  token: string;
  id: BigNumber;
  amount: BigNumber;
};

export interface ShopInterface extends utils.Interface {
  functions: {
    "c_0xbefdce6a(bytes32)": FunctionFragment;
    "changeFeeOwner(address)": FunctionFragment;
    "changeFeePercent(uint256)": FunctionFragment;
    "changeItemPrice(uint256,(uint8,address,uint256)[])": FunctionFragment;
    "changeRoyaltyOwner(address)": FunctionFragment;
    "changeRoyaltyPercent(uint256)": FunctionFragment;
    "feeOwner()": FunctionFragment;
    "feePercent()": FunctionFragment;
    "getInventoryItem(uint256)": FunctionFragment;
    "inventory(uint256)": FunctionFragment;
    "itemRoyaltyPercent()": FunctionFragment;
    "listItems((uint8,address,uint256)[],address[],uint256[][],uint256[][])": FunctionFragment;
    "name()": FunctionFragment;
    "nextItemId()": FunctionFragment;
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": FunctionFragment;
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "owner()": FunctionFragment;
    "pricePairLengths(uint256)": FunctionFragment;
    "prices(uint256,uint256)": FunctionFragment;
    "purchaseItem(uint256,uint256,uint256)": FunctionFragment;
    "removeItem(uint256,uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "royaltyOwner()": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "version()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "c_0xbefdce6a",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "changeFeeOwner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "changeFeePercent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "changeItemPrice",
    values: [BigNumberish, PricePairStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "changeRoyaltyOwner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "changeRoyaltyPercent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "feeOwner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "feePercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInventoryItem",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "inventory",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "itemRoyaltyPercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "listItems",
    values: [PricePairStruct[], string[], BigNumberish[][], BigNumberish[][]]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "nextItemId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pricePairLengths",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "prices",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "purchaseItem",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removeItem",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "royaltyOwner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "version", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "c_0xbefdce6a",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeFeeOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeFeePercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeItemPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeRoyaltyOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeRoyaltyPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "feeOwner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "feePercent", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getInventoryItem",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "inventory", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "itemRoyaltyPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "listItems", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nextItemId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pricePairLengths",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "prices", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "purchaseItem",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "removeItem", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "royaltyOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "version", data: BytesLike): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface Shop extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ShopInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    c_0xbefdce6a(
      c__0xbefdce6a: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    changeFeeOwner(
      _newFeeOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeFeePercent(
      _newFeePercent: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeItemPrice(
      _itemId: BigNumberish,
      _pricePairs: PricePairStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeRoyaltyOwner(
      _newRoyaltyOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeRoyaltyPercent(
      _newRoyaltyPercent: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    feeOwner(overrides?: CallOverrides): Promise<[string]>;

    feePercent(overrides?: CallOverrides): Promise<[BigNumber]>;

    getInventoryItem(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[ShopItemStructOutput, PricePairStructOutput[]]>;

    inventory(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        token: string;
        id: BigNumber;
        amount: BigNumber;
      }
    >;

    itemRoyaltyPercent(overrides?: CallOverrides): Promise<[BigNumber]>;

    listItems(
      _pricePairs: PricePairStruct[],
      _items: string[],
      _ids: BigNumberish[][],
      _amounts: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    name(overrides?: CallOverrides): Promise<[string]>;

    nextItemId(overrides?: CallOverrides): Promise<[BigNumber]>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    pricePairLengths(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    prices(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [number, string, BigNumber] & {
        assetType: number;
        asset: string;
        price: BigNumber;
      }
    >;

    purchaseItem(
      _itemId: BigNumberish,
      _amount: BigNumberish,
      _assetId: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeItem(
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    royaltyOwner(overrides?: CallOverrides): Promise<[string]>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    version(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  c_0xbefdce6a(
    c__0xbefdce6a: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  changeFeeOwner(
    _newFeeOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeFeePercent(
    _newFeePercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeItemPrice(
    _itemId: BigNumberish,
    _pricePairs: PricePairStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeRoyaltyOwner(
    _newRoyaltyOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeRoyaltyPercent(
    _newRoyaltyPercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  feeOwner(overrides?: CallOverrides): Promise<string>;

  feePercent(overrides?: CallOverrides): Promise<BigNumber>;

  getInventoryItem(
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[ShopItemStructOutput, PricePairStructOutput[]]>;

  inventory(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      token: string;
      id: BigNumber;
      amount: BigNumber;
    }
  >;

  itemRoyaltyPercent(overrides?: CallOverrides): Promise<BigNumber>;

  listItems(
    _pricePairs: PricePairStruct[],
    _items: string[],
    _ids: BigNumberish[][],
    _amounts: BigNumberish[][],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  name(overrides?: CallOverrides): Promise<string>;

  nextItemId(overrides?: CallOverrides): Promise<BigNumber>;

  onERC1155BatchReceived(
    arg0: string,
    arg1: string,
    arg2: BigNumberish[],
    arg3: BigNumberish[],
    arg4: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC1155Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  pricePairLengths(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  prices(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [number, string, BigNumber] & {
      assetType: number;
      asset: string;
      price: BigNumber;
    }
  >;

  purchaseItem(
    _itemId: BigNumberish,
    _amount: BigNumberish,
    _assetId: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeItem(
    _itemId: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  royaltyOwner(overrides?: CallOverrides): Promise<string>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  version(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    c_0xbefdce6a(
      c__0xbefdce6a: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    changeFeeOwner(
      _newFeeOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    changeFeePercent(
      _newFeePercent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    changeItemPrice(
      _itemId: BigNumberish,
      _pricePairs: PricePairStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    changeRoyaltyOwner(
      _newRoyaltyOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    changeRoyaltyPercent(
      _newRoyaltyPercent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    feeOwner(overrides?: CallOverrides): Promise<string>;

    feePercent(overrides?: CallOverrides): Promise<BigNumber>;

    getInventoryItem(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[ShopItemStructOutput, PricePairStructOutput[]]>;

    inventory(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        token: string;
        id: BigNumber;
        amount: BigNumber;
      }
    >;

    itemRoyaltyPercent(overrides?: CallOverrides): Promise<BigNumber>;

    listItems(
      _pricePairs: PricePairStruct[],
      _items: string[],
      _ids: BigNumberish[][],
      _amounts: BigNumberish[][],
      overrides?: CallOverrides
    ): Promise<void>;

    name(overrides?: CallOverrides): Promise<string>;

    nextItemId(overrides?: CallOverrides): Promise<BigNumber>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    pricePairLengths(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    prices(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [number, string, BigNumber] & {
        assetType: number;
        asset: string;
        price: BigNumber;
      }
    >;

    purchaseItem(
      _itemId: BigNumberish,
      _amount: BigNumberish,
      _assetId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    removeItem(
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    royaltyOwner(overrides?: CallOverrides): Promise<string>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    version(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    c_0xbefdce6a(
      c__0xbefdce6a: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    changeFeeOwner(
      _newFeeOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeFeePercent(
      _newFeePercent: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeItemPrice(
      _itemId: BigNumberish,
      _pricePairs: PricePairStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeRoyaltyOwner(
      _newRoyaltyOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeRoyaltyPercent(
      _newRoyaltyPercent: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    feeOwner(overrides?: CallOverrides): Promise<BigNumber>;

    feePercent(overrides?: CallOverrides): Promise<BigNumber>;

    getInventoryItem(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    inventory(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    itemRoyaltyPercent(overrides?: CallOverrides): Promise<BigNumber>;

    listItems(
      _pricePairs: PricePairStruct[],
      _items: string[],
      _ids: BigNumberish[][],
      _amounts: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    nextItemId(overrides?: CallOverrides): Promise<BigNumber>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    pricePairLengths(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    prices(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    purchaseItem(
      _itemId: BigNumberish,
      _amount: BigNumberish,
      _assetId: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeItem(
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    royaltyOwner(overrides?: CallOverrides): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    version(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    c_0xbefdce6a(
      c__0xbefdce6a: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    changeFeeOwner(
      _newFeeOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeFeePercent(
      _newFeePercent: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeItemPrice(
      _itemId: BigNumberish,
      _pricePairs: PricePairStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeRoyaltyOwner(
      _newRoyaltyOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeRoyaltyPercent(
      _newRoyaltyPercent: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    feeOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    feePercent(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getInventoryItem(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    inventory(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    itemRoyaltyPercent(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    listItems(
      _pricePairs: PricePairStruct[],
      _items: string[],
      _ids: BigNumberish[][],
      _amounts: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    nextItemId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pricePairLengths(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    prices(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    purchaseItem(
      _itemId: BigNumberish,
      _amount: BigNumberish,
      _assetId: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeItem(
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    royaltyOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    version(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
